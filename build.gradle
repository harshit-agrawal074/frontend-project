buildscript {
    ext {
        springVersion = '5.1.7.RELEASE'
        springBootVersion = '2.1.3.RELEASE'
        swaggerVersion = '1.5.19'
        lombokVersion = '1.18.12'
        testng = '6.14.2'
        orikaVersion = '1.5.4'
        junitVersion = '4.12'
        assertJVersion = '3.9.0'
        mockitoVersion = '3.0.0'
        flywayVersion = '4.0.3'
        mysqlConnectorVersion = '5.1.13'
        hibernateJpaAnnotationProcessorVersion = "1.0.2.Final"
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("junit:junit:${junitVersion}")
        classpath("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
}


plugins {
    id 'java'
    id 'idea'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
}

group 'com.backendproject'
version '1.0-SNAPSHOT'

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    apply plugin: 'idea'
    clean.doFirst {
        delete "${projectDir}/out/"
    }
}

subprojects {
    group project.parent.group
    version project.parent.version

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    apply plugin: 'groovy'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        }
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    processResources {
        filesMatching("**/**.yml") {
            //expand(project.properties)
        }
    }

    dependencies {
        compile (
                "org.springframework:spring-context:${springVersion}",
        )
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    }

    test {
        useJUnit()
    }
}
